name: Deploy Test Server
on:
  push:
    branches: [ 'main' ]

jobs:
  build:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [14.x]

    steps:
    - uses: actions/checkout@v2

    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v1
      with:
        node-version: ${{ matrix.node-version }}

    - name: Get yarn cache directory path
      id: yarn-cache-dir-path
      run: echo "::set-output name=dir::$(yarn cache dir)"
    - uses: actions/cache@v1
      id: yarn-cache # use this to check for `cache-hit` (`steps.yarn-cache.outputs.cache-hit != 'true'`)
      with:
        path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
        key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
        restore-keys: |
          ${{ runner.os }}-yarn-

    - name: Install
      run: yarn install --frozen-lockfile

    - name: Build
      run: yarn build --if-present
      env:
        REACT_APP_CHAIN_ID: 99999
        REACT_APP_NETWORK_URL: https://b32b3f3b-c059-47f5-b171-1a3c952f61b7.4z9mdn90pg6rby7s7iqv9kjgg.ep.bccloud.net:8545/

    - name: Test
      run: yarn test

    - name: Use cloud-sdk
      uses: docker://google/cloud-sdk:273.0.0

    - name: Deploy an App Engine app
      id: deploy-app
      uses: google-github-actions/deploy-appengine@v0.3.1
      with:
        project_id: gu-swap
        deliverables: app.yaml
        credentials: ${{ secrets.GCLOUD_SERVICE_KEY }}